{"version":3,"file":"static/webpack/static/development/pages/names.js.d12a8af89d09b157d592.hot-update.js","sources":["webpack:///./components/InnerNames.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { genId, _onShareClick, _addHighlightClass } from \"./helpers\";\n\nconst OuterWrap = styled.div`\n  overflow: hidden;\n  padding-top: 5vw;\n`;\n\nconst _renderNamesWithId = (names, highlightedid) => {\n  if (names) {\n    return names.map((woman, index) => {\n      const personId = genId(woman.name);\n      //   console.log(personId);\n\n      return (\n        <div\n          data-scrollid={personId}\n          data-nameid={personId}\n          className={\n            highlightedid === personId\n              ? `womanItem ${personId} ${highlightedid} highlighted`\n              : `womanItem ${personId}`\n          }\n          key={woman.id + personId + index}\n          onClick={e => _addHighlightClass(e)}\n        >\n          <span className=\"inner-relative\">\n            <CopyToClipboard\n              text=\"testing to see if copyto clipboard works\"\n              onCopy={() => this.setState({ copied: true })}\n            >\n              <span className=\"super-cta\">Share</span>\n            </CopyToClipboard>\n\n            <h1>{woman.name}</h1>\n          </span>\n        </div>\n      );\n    });\n  }\n};\n\nconst _renderNames = (names, highlightedid) => {\n  if (names) {\n    return names.map((woman, index) => {\n      const personId = genId(woman.name);\n      return (\n        <div\n          data-nameid={personId}\n          className={\n            highlightedid === personId\n              ? `womanItem ${personId} ${highlightedid} highlighted`\n              : `womanItem ${personId}`\n          }\n          key={woman.id + personId + index}\n          onClick={e => _addHighlightClass(e)}\n        >\n          <span className=\"inner-relative\">\n            <span onClick={e => _onShareClick(e)} className=\"super-cta\">\n              Share\n            </span>\n            <h1>{woman.name}</h1>\n          </span>\n        </div>\n      );\n    });\n  }\n};\n\n// TODO: figure out why mouseMove is causing this component to rerender\n\nclass InnerNames extends React.PureComponent {\n  render() {\n    return (\n      <OuterWrap>\n        {this.props.renderwithid\n          ? _renderNamesWithId(this.props.names, this.props.highlightedid)\n          : _renderNames(this.props.names, this.props.highlightedid)}\n      </OuterWrap>\n    );\n  }\n}\n\nexport default InnerNames;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AATA;AACA;AAWA;;;;A","sourceRoot":""}