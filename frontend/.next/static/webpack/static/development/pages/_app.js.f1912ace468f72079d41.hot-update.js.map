{"version":3,"file":"static/webpack/static/development/pages/_app.js.f1912ace468f72079d41.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\";\nimport Page from \"../components/Page\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withData from \"../lib/withData\";\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    // this exposes the query to the user\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n\n  componentDidMount() {\n    if (\"scrollRestoration\" in history) {\n      history.scrollRestoration = \"manual\";\n    }\n\n    if (typeof window === \"undefined\") {\n      return 0;\n    } else if (typeof window != \"undefined\") {\n      const hash = window.location.hash;\n      console.log({ hash });\n      if (hash !== \"\") {\n        const id = hash.substr(1);\n        const elScrollHeight = document.querySelector(hash).offsetTop;\n        console.log(elScrollHeight);\n        const halfHeight = window.innerHeight / 2.5;\n        const totalScrollHeight = elScrollHeight - halfHeight;\n\n        document.querySelectorAll(`.${id}`).forEach(el => {\n          el.classList.add(\"highlighted\");\n        });\n\n        window.scrollTo({\n          top: totalScrollHeight,\n          left: 0\n          // behavior: \"smooth\"\n        });\n\n        // if (elScrollHeight) {\n        //   window.scrollTo({\n        //     top: totalScrollHeight,\n        //     left: 0\n        //     // behavior: \"smooth\"\n        //   });\n        // }\n      } else {\n        console.log(\"in else\");\n        window &&\n          typeof window === \"object\" &&\n          window.scrollTo &&\n          typeof window.scrollTo === \"function\" &&\n          window.scrollTo(0, 0);\n      }\n    }\n  }\n\n  render() {\n    const { Component, apollo, pageProps } = this.props;\n\n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n          <Page>\n            <Component {...pageProps} />\n          </Page>\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withData(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;AAnEA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AATA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}